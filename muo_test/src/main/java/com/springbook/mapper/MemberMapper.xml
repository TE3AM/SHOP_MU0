<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springbook.mapper.MemberMapper">


<!-- 회원가입 때 -->
<insert id="register">
<selectKey keyProperty="mb_seq" order="BEFORE"
	resultType="int">
	select member_sequence.nextval from dual
</selectKey>
insert into member(mb_seq,mb_id,mb_pw,mb_name,mb_nickname,mb_phone,mb_gender,mb_email,mb_zipcode,mb_addr,mb_detailAddr,mb_notes,mb_point,mb_grade,mb_eventNum,mb_joinDate)
values(#{mb_seq},#{mb_id},#{mb_pw},#{mb_name},#{mb_nickname},#{mb_phone},#{mb_gender},#{mb_email},#{mb_zipcode},#{mb_addr},#{mb_detailAddr},#{mb_notes},DEFAULT,DEFAULT,DEFAULT,DEFAULT)
</insert>

<select id="getList" resultType="com.springbook.domain.MemberVO">
select mb_seq,mb_id,mb_name,mb_nickname,mb_phone,mb_joinDate,mb_grade,mb_point,mb_eventNum 
from member 
where mb_seq>0
order by mb_seq asc
</select>

<select id="get" resultType="com.springbook.domain.MemberVO">
select * from member where mb_seq=#{mb_seq}
</select>

<delete id="delete">
delete from member where mb_seq=#{mb_seq}	
</delete>

<update id="update" >
update member set 
mb_seq=#{mb_seq},mb_id=#{mb_id},mb_pw=#{mb_pw},mb_name=#{mb_name},mb_nickname=#{mb_nickname},mb_phone=#{mb_phone},mb_gender=#{mb_gender},mb_email=#{mb_email},mb_zipcode=#{mb_zipcode},mb_addr=#{mb_addr},mb_detailAddr=#{mb_detailAddr},mb_notes=#{mb_notes},mb_point=#{mb_point},mb_grade=#{mb_grade},mb_eventNum=#{mb_eventNum},mb_joinDate=#{mb_joinDate}
where mb_seq=#{mb_seq}
</update>

<select id="getListWithPaging" resultType="com.springbook.domain.MemberVO">
<![CDATA[
select mb_seq,mb_id,mb_name,mb_nickname,mb_phone,mb_joinDate,mb_grade,mb_point,mb_eventNum 
   from 
       (
       select /*+INDEX_DESC(member pk_member) */
         rownum rn,mb_seq,mb_id,mb_name,mb_nickname,mb_phone,mb_joinDate,mb_grade,mb_point,mb_eventNum
       from 
         member
      where 
     ]]> 
	<trim prefix="(" suffix=") AND " prefixOverrides="OR">
		<if test="type=='id'.toString()">
		mb_id like '%'||#{keyword}||'%'
		</if>
		<if test="type=='name'.toString()">
		mb_name like '%'||#{keyword}||'%'
		</if>
		<if test="type=='nickname'.toString()">
		mb_nickname like '%'||#{keyword}||'%'
		</if>
		<if test="type=='grade'.toString()">
		mb_grade like '%'||#{keyword}||'%'
		</if>
		
	</trim>
    <![CDATA[ 
    rownum <= #{pageNum} * #{amount}
      )
  where rn > (#{pageNum} -1) * #{amount}
  ]]>
  </select>

<select id="getTotalCount" resultType="int">
select count(*) from member where 
<trim prefix="(" suffix=") AND " prefixOverrides="OR">
		<if test="type=='id'.toString()">
		mb_id like '%'||#{keyword}||'%'
		</if>
		<if test="type=='name'.toString()">
		mb_name like '%'||#{keyword}||'%'
		</if>
		<if test="type=='nickname'.toString()">
		mb_nickname like '%'||#{keyword}||'%'
		</if>
		<if test="type=='grade'.toString()">
		mb_grade like '%'||#{keyword}||'%'
		</if>
		
	</trim>
mb_seq>0
</select>

<!-- 비번찾기 -->
<select id="findPW" resultType="string">
select mb_pw from member where 
mb_id like '%'||#{mb_id}||'%' and mb_name like '%'||#{mb_name}||'%' and mb_phone like '%'||#{mb_phone}||'%'

<!-- <trim prefix="where" prefixOverrides="AND|OR"> -->
<!-- <if test="findPWType=='phone'.toString()"> -->
<!-- mb_id like '%'||#{mb_id}||'%' and mb_name like '%'||#{mb_name}||'%' and mb_phone like '%'||#{mb_phone}||'%' -->

<!-- </if> -->
<!-- <if test="findPWType=='email'.toString()"> -->
<!-- mb_id like '%'||#{mb_id}||'%' and mb_email like '%'||#{mb_email}||'%' -->
<!-- </if> -->
<!-- </trim> -->
</select>

<select id="checkIdValidation" resultType="int">
select count(*) from member where mb_id like '%'||#{mb_id}||'%'
</select>
<select id="checkPhoneValidation" resultType="int">
select count(*) from member where mb_phone like '%'||#{mb_phone}||'%'
</select>

</mapper>